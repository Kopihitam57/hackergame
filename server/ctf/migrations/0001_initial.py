# Generated by Django 2.1.12 on 2019-09-08 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
                ('flag', models.TextField(help_text="如果为静态 flag，请直接填入 flag。如果 flag 为 <code>'flag{' + hashlib.sha256(b'secret' + token.encode()).hexdigest()[:16] + '}'</code>，请填入 <code>flag{' + hashlib.sha256(b'secret' + token.encode()).hexdigest()[:16] + '}</code>（去掉最外侧的引号）。")),
                ('score', models.IntegerField(default=100)),
                ('index', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'ordering': ('index',),
            },
            bases=(utils.models.DictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.TextField()),
                ('time', models.DateTimeField(auto_now=True)),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ctf.Flag')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default='Hackergame')),
                ('description', models.TextField(blank=True)),
                ('keywords', models.TextField(blank=True, default='Hackergame,CTF')),
                ('content', models.TextField(blank=True, help_text='Will be put into a div as HTML.')),
            ],
            bases=(utils.models.SingletonMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('is_open', models.BooleanField(default=False)),
                ('name', models.TextField()),
                ('detail', models.TextField(blank=True)),
                ('url', models.TextField(blank=True)),
                ('prompt', models.TextField(blank=True, default='flag{...}')),
                ('index', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'ordering': ('index',),
            },
            bases=(utils.models.DictMixin, utils.models.NameMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Solve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.Flag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimerSwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('on_off', models.BooleanField()),
                ('note', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserFlagCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag_text', models.TextField(db_index=True)),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ctf.Flag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFlagViolation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flag', models.TextField()),
                ('time', models.DateTimeField(auto_now=True)),
                ('match_flag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.Flag')),
                ('match_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userflagviolated', to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.Problem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserScoreCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(db_index=True)),
                ('time', models.DateTimeField(db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='log',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ctf.Problem'),
        ),
        migrations.AddField(
            model_name='log',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='flag',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ctf.Problem'),
        ),
        migrations.AlterUniqueTogether(
            name='solve',
            unique_together={('user', 'flag')},
        ),
    ]
